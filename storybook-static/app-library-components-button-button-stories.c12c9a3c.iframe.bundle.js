"use strict";(self.webpackChunkbooks=self.webpackChunkbooks||[]).push([[601],{"./src/app/library/components/button/button.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Ghost:()=>Ghost,Primary:()=>Primary,Secondary:()=>Secondary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>button_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var ButtonTypes,ButtonSizes,core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");!function(ButtonTypes){ButtonTypes.SECONDARY="secondary",ButtonTypes.PRIMARY="primary",ButtonTypes.GHOST="ghost"}(ButtonTypes||(ButtonTypes={})),function(ButtonSizes){ButtonSizes.SMALL="small",ButtonSizes.MIDDLE="middle",ButtonSizes.LARGE="large",ButtonSizes.FULL="full"}(ButtonSizes||(ButtonSizes={}));let ButtonPipe=class ButtonPipe{transform(type,size){const types={[ButtonTypes.PRIMARY]:"text-white bg-green-950 border border-gray-200 hover:bg-green-900",[ButtonTypes.SECONDARY]:"text-white bg-gray-700 border border-gray hover:bg-gray-600",[ButtonTypes.GHOST]:"text-primary border border-gray-400 hover:bg-neutral-100"},sizes={[ButtonSizes.FULL]:"w-full h-full py-2 px-4",[ButtonSizes.SMALL]:"py-1 px-3 w-[100px]",[ButtonSizes.MIDDLE]:"py-2 px-4 text-lg",[ButtonSizes.LARGE]:"py-4 px-6 text-xl"};return`${types[type]} ${sizes[size]}`}};ButtonPipe=(0,tslib_es6.gn)([(0,core.Pipe)({name:"buttonPipe",standalone:!0})],ButtonPipe);var common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs");let ButtonComponent=class ButtonComponent{constructor(){this.buttonClickEvent=new core.EventEmitter,this.type=ButtonTypes.PRIMARY,this.size=ButtonSizes.MIDDLE,this.text=""}clickOnButton(){this.buttonClickEvent.emit()}static#_=this.propDecorators={buttonClickEvent:[{type:core.Output}],type:[{type:core.Input}],size:[{type:core.Input}],text:[{type:core.Input}]}};ButtonComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"lib-button",standalone:!0,imports:[ButtonPipe,common.NgClass],template:'<button\n  class="rounded-md cursor-pointer"\n  [ngClass]="type | buttonPipe: size"\n  type="button"\n  (click)="clickOnButton()"\n>\n  {{ text }}\n</button>\n'})],ButtonComponent);const button_stories={title:"Button",component:ButtonComponent,tags:["autodocs"],render:args=>({props:{...args}})},Primary={args:{type:ButtonTypes.PRIMARY,text:"Primary Button"}},Secondary={args:{type:ButtonTypes.SECONDARY,text:"Secondary Button"}},Ghost={args:{type:ButtonTypes.GHOST,text:"Ghost Button"}};Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"{\n  args: {\n    type: ButtonTypes.PRIMARY,\n    text: 'Primary Button'\n  }\n}",...Primary.parameters?.docs?.source}}},Secondary.parameters={...Secondary.parameters,docs:{...Secondary.parameters?.docs,source:{originalSource:"{\n  args: {\n    type: ButtonTypes.SECONDARY,\n    text: 'Secondary Button'\n  }\n}",...Secondary.parameters?.docs?.source}}},Ghost.parameters={...Ghost.parameters,docs:{...Ghost.parameters?.docs,source:{originalSource:"{\n  args: {\n    type: ButtonTypes.GHOST,\n    text: 'Ghost Button'\n  }\n}",...Ghost.parameters?.docs?.source}}};const __namedExportsOrder=["Primary","Secondary","Ghost"]}}]);